<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.home.user.model.mapper.UserMapper">

	<resultMap type="UserDto" id="user">
		<result column="user_no" property="userNo"/>
		<result column="user_name" property="userName"/>
		<result column="user_nickname" property="userNickname"/>
		<result column="user_password" property="userPassword"/>
		<result column="user_email" property="email"/>
		<result column="phone_number" property="phoneNumber"/>
		<result column="role" property="role"/>
		<result column="register_time" property="registerDate"/>
		<result column="deleted" property="deleted"/>
		<result column="deleted_at" property="deletedAt"/>
		<result column="reusersfresh_token" property="refreshToken"/>
	</resultMap>
	
	<select id="login" resultMap="user">
		select * from users 
		where user_email = #{email} 
		and user_password = #{userPassword} 	
	</select>
	
	<update id="saveRefreshToken" parameterType="UserDto">
		update users
		set reusersfresh_token = #{refreshToken}
		where user_no = #{userNo}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select reusersfresh_token
		from users
		where user_no = #{userNo}
	</select>
	
	<select id="getUserInfo" parameterType="String" resultMap="user" >
		select user_no, user_name, user_nickname, user_email, phone_number, role, register_time
		from users
		where user_no = #{userNo}
	</select>
	
	<update id="deleteRefreshToken" parameterType="int">
		update users
		set reusersfresh_token = #{refreshToken, jdbcType=VARCHAR}
		where user_no = #{userNo}
	</update>
	
	<select id="getUserCountByNickName" resultType="int">
	    select count(*)
	    from users
	    where user_nickname = #{userNickname}
	</select>
	
	<insert id="registerUser" parameterType="UserDto">
		insert into users(user_name,user_password,user_nickname,user_email,phone_number, role ,register_time)
		values (#{userName},#{userPassword},#{userNickname},#{email},#{phoneNumber},#{role},now());
	</insert>
	
	<select id="getUserNumByNickName" parameterType="String" resultType="int">
		select user_no
		from users
		where user_nickname = #{userName}
	</select>

 	<update id="userUpdate" parameterType="UserDto">
        update users
        set user_nickname = #{userNickname}
        where user_no = #{userNo}
        and deleted = false
    </update>
    
	<update id="withdrawUser" parameterType="int">
	    update users
	    set deleted = true,
	        deleted_at = now(),
	        reusersfresh_token = null
	    where user_no = #{userNo}
	    and deleted = false
	</update>
	
	<select id="getDeletedUserByEmail" parameterType="string" resultMap="user">
	    SELECT *
	    FROM users
	    WHERE user_email = #{email}
	    AND deleted = true
	</select>
	
	<update id="restoreUser" parameterType="int">
	    UPDATE users
	    SET deleted = false,
	        deleted_at = null
	    WHERE user_no = #{userNo}
	</update>

	
	<select id="checkEmailExists" parameterType="String" resultType="int">
	    SELECT COUNT(*) FROM users WHERE user_email = #{email} AND deleted = false
	</select>

</mapper>